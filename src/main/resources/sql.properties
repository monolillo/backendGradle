placeDao.getActivePlacesSql=SELECT ID, NAMEE as NAME FROM PLACES

catalogDao.getActiveCatalogSql=select pro.id as idProduct, pro.name, pro.itemNumber, ca.critical, pro.price, pro.imageUrl, ca.min, ca.max from catalog ca left join product pro on ca.productId = pro.id where ca.siteId = ?
catalogDao.updateActiveCatalogSql=update catalog set min = ?, max = ?, critical = ? where siteId = ? and productId = ?
catalogDao.getCatalogByIdSql=select critical, min, max, productId, siteId from catalog where siteId = ? and productId = ? 

productDao.getProductByIdSql=select pro.id as idProduct, pro.name, pro.itemNumber, pro.price, pro.imageUrl, ca.min, ca.max, ca.critical from catalog ca left join product pro on ca.productId = pro.id where ca.siteId = ? and pro.id = ?
productDao.getProductByItemNumberSql=select pro.id as idProduct, pro.name, pro.itemNumber, pro.price, pro.imageUrl, ca.min, ca.max, ca.critical from catalog ca left join product pro on ca.productId = pro.id where ca.siteId = ? and pro.itemNumber = ?

inventoryDao.existProductInInventorySql=select count(1) from inventory where shopId = ? and productId = ?
inventoryDao.newProductSql=insert into inventory (qty, shopId, productId, locationId) values (?,?,?,?)
inventoryDao.updateProductSql=update inventory set qty=qty+?, locationId=? where shopId=? and productId=?
inventoryDao.getInventoryByIdSql=select qty as quantity, shopId, productId, locationId from inventory where productId = ? and shopId = ?
inventoryDao.getQuantitySql=select coalesce(sum(qty),0) from inventory where productId = ? and shopId in (select shopId	from shop where siteId = ?)
inventoryDao.newCheckInSql=insert into checkin (id, qty, username, timestamp, shopId, locationId, productId) values (?,?,?,?,?,?,?)
inventoryDao.getNextCheckinIdSql=SELECT NEXT VALUE FOR checkin_seq 
inventoryDao.getCheckInByIdSql=select id, qty as quantity, username, timestamp, shopId, locationId, productId from checkin where id = ?
inventoryDao.updateCheckOutProductSql=update inventory set qty=qty-? where shopId=? and productId=?
inventoryDao.newCheckOutSql=insert into checkout (id, qty, username, timestamp, shopId, locationId, productId) values (?,?,?,?,?,?,?)
inventoryDao.getNextCheckoutIdSql=select next value for checkout_seq
inventoryDao.getCheckOutByIdSql=select id, qty as quantity, username, timestamp, shopId, locationId, productId from checkout where id = ?
inventoryDao.deleteCheckInSql=DELETE FROM CHECKIN WHERE id = ?
inventoryDao.undoCheckInSql=update inventory set qty = qty - ? where productId = ? and shopId = ?
inventoryDao.deleteCheckOutSql=DELETE FROM CHECKOUT WHERE id = ?
inventoryDao.undoCheckOutSql=update inventory set qty = qty + ? where productId = ? and shopId = ?

locationDao.getLocationsByShop=select id, name, shopId from location where shopId = ?

userDetailsService.usersByUsername=select username,password,enabled,email,phone from users where username = ?

notificationDao.getListOutOfStockSql=select ca.productId as idProduct, pro.name, pro.itemNumber, pro.price, pro.imageUrl, ca.critical, ca.min, ca.max from catalog ca, inventory inv, product pro where pro.id = ca.productId and inv.productId = ca.productId and inv.shopId in (select shopId from shop where siteId = ?) and ca.siteId = ? and inv.qty = 0
notificationDao.getListLessThanMinSql=select ca.productId as idProduct, pro.name, pro.itemNumber, pro.price, pro.imageUrl, ca.critical, ca.min, ca.max from catalog ca, inventory inv, product pro where pro.id = ca.productId and inv.productId = ca.productId and inv.shopId in (select shopId from shop where siteId = ?) and ca.siteId = ? and inv.qty > 0 and inv.qty < ca.min order by inv.qty
notificationDao.getListMinThresholdSql=select ca.productId as idProduct, pro.name, pro.itemNumber, pro.price, pro.imageUrl, ca.critical, ca.min, ca.max from catalog ca, inventory inv, product pro where pro.id = ca.productId and inv.productId = ca.productId and inv.shopId in (select shopId from shop where siteId = ?) and ca.siteId = ? and inv.qty = ca.min order by inv.qty

siteDao.getSiteByUserSql=select id, companyId, name from site where id in (select siteId from site_users where username = ?)
shopDao.getShopByUserSql=select id, siteId, name from shop where siteId = ?